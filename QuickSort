
void shufftlingForQuicksort(vector<int>& nums, int k) {
    shuffle(nums.begin(), nums.end(), default_random_engine(0));
    quicksort(nums, 0, nums.size()-1);
}

void quicksort(vector<int>&nums, int l, int r)
{
    if(l>=r) return;
    int pivotIndex = partition(nums,l,r);
    if(pivotIndex>resIndex) quicksort(nums,l,pivotIndex-1);
    else quicksort(nums,pivotIndex+1,r);
}

int partition(vector<int>&nums, int l , int r)
{
    int pivot = nums[r], pivotIndex = l;
    for( int i = l ; i <= r ; i++)
        if(nums[i] <= pivot) swap(nums[i],nums[pivotIndex++]);
    return pivotIndex-1;
}
